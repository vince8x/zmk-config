/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <10>;

        map = <
                                RC(4,0)    RC(9,0)
RC(1,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)    RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(6,0)
RC(2,0) RC(2,1) RC(1,2) RC(1,3) RC(1,4)    RC(6,4) RC(6,3) RC(6,2) RC(7,1) RC(7,0)
RC(3,0) RC(3,1) RC(3,2) RC(2,3) RC(2,4)    RC(7,4) RC(7,3) RC(8,2) RC(8,1) RC(8,0)
        RC(4,1) RC(4,2)                                    RC(9,2) RC(9,1)
                        RC(4,3) RC(3,4)    RC(8,4) RC(9,3)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-composite";
        label = "KSCAN";

        matrix_1 {
            kscan = <&kscan_matrix_1>;
        };

        matrix_2 {
            kscan = <&kscan_matrix_2>;
            row-offset = <5>;
        };
    };

    kscan_matrix_1: kscan_matrix_1 {
        compatible = "zmk,kscan-gpio-round-robin-matrix";
        label = "KSCAN_ROUND_ROBIN_MATRIX_1";

        output-gpios
            = <&gpioa 5  GPIO_ACTIVE_HIGH>
            , <&gpioa 4  GPIO_ACTIVE_HIGH>
            , <&gpioa 3  GPIO_ACTIVE_HIGH>
            , <&gpioa 2  GPIO_ACTIVE_HIGH>
            , <&gpioa 1  GPIO_ACTIVE_HIGH>
            ;
        input-gpios
            = <&gpioa 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpioa 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpioa 3  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpioa 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpioa 1  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    kscan_matrix_2: kscan_matrix_2 {
        compatible = "zmk,kscan-gpio-round-robin-matrix";
        label = "KSCAN_ROUND_ROBIN_MATRIX_2";

        output-gpios
            = <&gpiob 7  GPIO_ACTIVE_HIGH>
            , <&gpioa 0  GPIO_ACTIVE_HIGH>
            , <&gpioa 15 GPIO_ACTIVE_HIGH>
            , <&gpiob 3  GPIO_ACTIVE_HIGH>
            , <&gpiob 4  GPIO_ACTIVE_HIGH>
            ;
        input-gpios
            = <&gpiob 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpioa 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpioa 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpiob 3  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpiob 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&gpiob 1  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpiob 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <3>;
        status = "okay";
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&gpiob 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpiob 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <3>;
        status = "okay";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };
};

arduino_i2c: &i2c1 {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        label = "DISPLAY";
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        com-sequential;
        prechargep = <0x22>;
    };
};
